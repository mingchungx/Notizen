[versions]
agp = "8.7.1"
kotlin = "2.2.10"

# Compose (Android-only UI bits you already had)
compose = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"

# Moko
moko-resources = "0.25.0"

# Core MP stack
coroutines = "1.9.0"
serialization = "1.7.3"
datetime = "0.6.0"
immutable = "0.3.7"

ktor = "3.0.0"
napier = "2.7.1"
settings = "1.1.1"
sqldelight = "2.1.0"
koin = "3.5.6"
turbine = "1.1.0"

# iOS
kmp-observableviewmodel = "1.0.0-BETA-13"
skie = "0.10.6"

[libraries]
# Kotlin / test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# Android UI (optional in shared)
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

# Moko
moko-classpath = { group = "dev.icerock.moko", name = "resources-generator", version.ref = "moko-resources" }
moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "moko-resources" }
moko-resource-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resources" }

# MP essentials
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable" }

# Networking
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Logging
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

# Settings (KV)
settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }

# SQLDelight
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }

# DI
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

# Testing
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# iOS
kmp-observableviewmodel = { module = "com.rickclephas.kmp:kmp-observableviewmodel-core", version.ref = "kmp-observableviewmodel" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

skie = { id = "co.touchlab.skie", version.ref = "skie" }